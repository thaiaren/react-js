{"ast":null,"code":"var _jsxFileName = \"/Users/thaivan/reactjs/my-app/src/components/tictactoe/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport { winner } from './Help';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [next, setNext] = useState(false);\n  const win = winner(board);\n  const handel = index => {\n    const boardCopy = [...board];\n    if (win || boardCopy[index]) return;\n    boardCopy[index] = next ? 'X' : 'O';\n    setBoard(boardCopy);\n    setNext(!next);\n  };\n  const handelReset = () => {\n    setBoard(Array(9).fill(null));\n    setNext(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      cell: board,\n      onClick: handel,\n      reset: handelReset,\n      win: win\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"qOhhaquLqdHVETBIY7wbHMGbLcQ=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Board","winner","jsxDEV","_jsxDEV","Main","_s","board","setBoard","Array","fill","next","setNext","win","handel","index","boardCopy","handelReset","children","cell","onClick","reset","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaivan/reactjs/my-app/src/components/tictactoe/Main.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Board from './Board';\nimport { winner } from './Help';\nimport './style.css';\n\nconst Main = () => {\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [next, setNext] = useState(false);\n    const win = winner(board);\n\n    const handel = (index) => {\n        const boardCopy = [...board];\n        if (win || boardCopy[index]) return;\n        boardCopy[index] = next ? 'X' : 'O';\n        setBoard(boardCopy);\n        setNext(!next);\n    };\n    const handelReset = () => {\n        setBoard(Array(9).fill(null));\n        setNext(true);\n    };\n    return (\n        <div>\n            <Board\n                cell={board}\n                onClick={handel}\n                reset={handelReset}\n                win={win}\n            />\n        </div>\n    );\n};\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAMa,GAAG,GAAGX,MAAM,CAACK,KAAK,CAAC;EAEzB,MAAMO,MAAM,GAAIC,KAAK,IAAK;IACtB,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC5B,IAAIM,GAAG,IAAIG,SAAS,CAACD,KAAK,CAAC,EAAE;IAC7BC,SAAS,CAACD,KAAK,CAAC,GAAGJ,IAAI,GAAG,GAAG,GAAG,GAAG;IACnCH,QAAQ,CAACQ,SAAS,CAAC;IACnBJ,OAAO,CAAC,CAACD,IAAI,CAAC;EAClB,CAAC;EACD,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtBT,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7BE,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EACD,oBACIR,OAAA;IAAAc,QAAA,eACId,OAAA,CAACH,KAAK;MACFkB,IAAI,EAAEZ,KAAM;MACZa,OAAO,EAAEN,MAAO;MAChBO,KAAK,EAAEJ,WAAY;MACnBJ,GAAG,EAAEA;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACnB,EAAA,CA1BID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}